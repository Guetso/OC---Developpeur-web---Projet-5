{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/btnMenu/toggleMenu.js","webpack:///./src/btnMenu/onScroll.js","webpack:///./src/btnMenu/btnMenu.js","webpack:///./src/confirm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","btnMenuOpen","document","querySelector","btnMenuClose","toggleMenu","getElementById","addEventListener","classList","add","remove","scrollY","supportPageOffset","undefined","window","pageXOffset","isCSS1Compat","compatMode","pageYOffset","documentElement","scrollTop","body","rect","getBoundingClientRect","constraintRect","getAttribute","constraintBottom","top","height","onScroll","contains","myOrder","JSON","parse","sessionStorage","getItem","console","log","spanFirstName","spanId","spanTotal","innerText","contact","firstName","orderId","btnMenu"],"mappings":"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","file":"confirm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Animation de l'ouverture du menu en format mobile (width < 980 px)\r\n\r\n// VARIABLES NECESSAIRES\r\n\r\nconst btnMenuOpen = document.querySelector('.menu__btn') // On récupère l'élément ayant pour class \".menu__btn\" = le bouton d'ouverture du menu\r\nconst btnMenuClose = document.querySelector('.close') // On récupère l'élément ayant pour classe \"close\" = le bouton de fermeture du menu\r\nconst toggleMenu = document.getElementById('navpanel') // On récupère l'élément ayant pour classe \"navpanel\" = le corps du menu\r\n\r\n// FONCTION D'OUVERTURE DU MENU\r\n\r\nbtnMenuOpen.addEventListener('click', function () { // Quand on clique sur le bouton \"Menu\"\r\n  toggleMenu.classList.add('menu--active') // la classe \"menu--active\" est ajoutée = scaleX(0)->scaleX(1) (cf.SASS, Layout, btnMenu.scss)\r\n})\r\n\r\n// FONCTION DE FERMETURE\r\n\r\nbtnMenuClose.addEventListener('click', function () { // Quand on clique sur la croix du menu\r\n  toggleMenu.classList.remove('menu--active') // La classe \"menu--active\" est retirée\r\n})\r\n\r\nexport { btnMenuOpen } // On va le récupérer pour lui attribuer une autre caractéristique dans onScroll.js\r\n","// Ajout d'un fond blanc au bouton de l'ouverture du menu lorsqu'il dépasse le header en scrollant en format mobile\r\n\r\n// MODULES NECESSAIRES\r\n\r\nimport { btnMenuOpen } from './toggleMenu.js' // On récupère le bouton du menu déjà utilisé dans anim.js\r\n\r\n// FONCTIONS NECESSAIRES\r\n\r\nconst scrollY = function () { // On créer une fonction qui va calculer la quantité de scroll effectuée par l'utilisateur avec un polyfil pour la propriété window.pageYOffset\r\n  const supportPageOffset = window.pageXOffset !== undefined\r\n  const isCSS1Compat = (document.compatMode || '') === 'CSS1Compat'\r\n  return supportPageOffset\r\n    ? window.pageYOffset\r\n    : isCSS1Compat\r\n      ? document.documentElement.scrollTop\r\n      : document.body.scrollTop\r\n}\r\n\r\n// VARIABLES NECESSAIRES\r\n\r\nconst rect = btnMenuOpen.getBoundingClientRect() // On récupère la position de notre bouton\r\nconst constraint = document.querySelector( // On va aller chercher dans notre élément bouton, l'attribut qui indique...\r\n  btnMenuOpen.getAttribute('data-constraint') // ...quelle est la contrainte qui force notre bouton à changer d'élément (ici le header)\r\n)\r\nconst constraintRect = constraint.getBoundingClientRect() // On va récupérer à son tour la position de la contrainte (=le header)\r\nconst constraintBottom = // On a besoin de connaitre la position du bas de la contrainte par rapport au bouton\r\n  constraintRect.top + scrollY() + constraintRect.height - rect.height // = la position du haut de la contrainte + la quantité de scroll + sa hauteur - la hauteur du bouton\r\n\r\n// CREATION DE LA FONCTION ONSCROLL\r\n\r\nconst onScroll = function () {\r\n  if (scrollY() > constraintBottom) { // Si la quantité de scroll effectué par l'utilisateur est supérieure au bas de la contrainte\r\n    btnMenuOpen.classList.add('menu__btn--solid') // Un fond blanc est ajouté au bouton par l'ajout d'une classe --solid\r\n  } else if (btnMenuOpen.classList.contains('menu__btn--solid')) { // Sinon\r\n    btnMenuOpen.classList.remove('menu__btn--solid') // Le fond blanc est retiré au bouton par le retrait de la classe --solid\r\n  }\r\n}\r\n\r\nexport { onScroll }\r\n","// MODULES NECESSAIRES\r\n\r\nimport { onScroll } from './onScroll.js'\r\n\r\n// CREATION DU BOUTON MENU DYNAMIQUE (TOGGLE + SCROLL)\r\n\r\nexport default function () {\r\n  window.addEventListener('scroll', onScroll) // A chaque mouvement de scroll la fonction est appelée\r\n}\r\n","/* global sessionStorage */\r\n\r\n// MODULES NECESSAIRES\r\n\r\nimport btnMenu from './btnMenu/btnMenu.js' // Importation du bouton menu dynamique\r\n\r\n// VARIABLES NECESSAIRES\r\n\r\nconst myOrder = JSON.parse(sessionStorage.getItem('myOrder'))\r\nconsole.log(myOrder)\r\nconst spanFirstName = document.getElementById('firstName')\r\nconst spanId = document.getElementById('cmdId')\r\nconst spanTotal = document.getElementById('cmdTotal')\r\n\r\n// AFFICHAGE DES INFORMATIONS DE CONFIRMATION\r\n\r\nspanFirstName.innerText = myOrder.contact.firstName\r\nspanId.innerText = myOrder.orderId\r\nspanTotal.innerText = sessionStorage.getItem('total') + ' €'\r\n\r\n// BOUTON MENU DYNAMIQUE\r\n\r\nbtnMenu() // On appelle la fonction pour activer le bouton dynamique du menu\r\n"],"sourceRoot":""}